
	>> v = zeros(10,1)

	>> for i = 1:10
		v(i) = 2^i;
	   end;

	>> indices=1:10
	>> for i=indices,
		disp(i);
	   end;

	>> i=1;
	>> while i<= 5,
		v(i) = 100;
		i = i+1;
		end;
	>> v

	>> i = 1;
	>> while true,
	v(i) = 999;
	i = i+1;
	if i == 6
		break;
	end;
	end;

	>> v(1)
	>> v(1) = 2;
	>> if v(1)==1,
	  	disp('The value is one')
	  elseif v(1) == 2,
	  	disp("The value is two")
	  else
	  	disp('The value is not one not two')
	  end;

FUNCTONS:

	% CREATE A FILE FOR A FUNCTION AND WRITE THE CODE BELOW:

		function y = squareThisNumber(x)
		y=x^2;

	NOW TO ACESS THE FILE OR FUNCTION FROM THE OCTAVE WORKSPACE

		>> cd 'path'
		>> squareThisNumber(5)
		>> % Octave search path
		>> addpath('C://Users......') % to add a default path

	FUNCTION THAT RETURN MULTIPLE VALUES

		function [y1,y2] = squareAndCubeThisNumber(x)
			y1 = x^2;
			y2 = x^3;

		>> [a,b] = squareAndCubeThisNumber(5);
		>> a
		>> b

	FUNCTION FOR CALCULATION OF COST FUNCTION

		function J = costFunction(X,y,theta)

		% X is the "desgin matrix" containing training examples
		% Y is the class labels

		m = size(X,1);
		predictions = X*theta;
		sqrErrors = (predictions-y).^2;

		J = 1/(2*m) * sum(sqrErrors);

	From the console acess to cost function:

		>> theta[0;1];
		>> j = costFunctionJ(X,y,theta)
		





