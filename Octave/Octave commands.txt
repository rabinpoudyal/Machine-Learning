Great prototyping language for machine learning
Others:
	python - numpy
	R
	Matlab

Listing the commands:

Elementary operations:
	
	+
	-
	/
	*
	^

Logical operations:

	1 == 2 % false =>where % is comment so it returns 0
	1 ~= 2 % true , gives 1

To change default octave promt:
	
	PS('>> ');

Octave Variables:

	a = 3
	a = 3; % putting a semicolon in the end of variable initialization does not print the output
	>> disp(a) % to print a
	>> 3
	>> a = pi;
	>> a
	>> 3.1416
	>> disp(sprintf('2 decimals: %0.2f',a)) % Printing a string
	>> 2 decimals: 3.14
	>> disp(sprintf('6 decimals: %0.6f',a))
	>> 3.141593
	>> a % writing simply a without semicolon displays the value of variable
	a = 3.14153265358979
	>> format short
	>> a
	a = 3.1416

Matrices with octave:

	>> A = [1 2; 3 4; 6 7]
	>> V = [1 2 3] % A row vector
	>> V = [1; 2; 3] % A column vector
	V = 
		1
		2
		3
	>> V = 1:0.0:2 % start from 1 to 2 incrementing 0.1

	>> V = 1:6 % print from 1 to 6 

	Other matrix commands:

	>> ones(2,3) % create a 1 matrix of size 2x3
	ans = 
		1	1	1
		1	1	1
	>> C = 2*ones(2,3)
	ans =
		2	2	2
		2	2	2
	>> w = ones(1,3)
	w = 1	1	1
	>> w = zeros(1,3)
	w = 0	0	0
	>> w = rand(1,3) % drawn from random distribution between 0 and 1
	>> w = randn(1,3) % drawing from gaussian distribution with mean = 0 and variance = 1 
	>> w = -6 + sqrt(10)*(randn(1,1000))
	>> hist(w) % print histogram
	>> hist(w,50) % print histogram with more buckets
	>> eye(4)
	ans = 
		4 X 4 identity diagonal matrix
	>> help eye


